{"ast":null,"code":"export default {\n  data() {\n    return {\n      markerPositions1: [[33.452278, 126.567803], [33.452671, 126.574792], [33.451744, 126.572441]],\n      markerPositions2: [[37.499590490909185, 127.0263723554437], [37.499427948430814, 127.02794423197847], [37.498553760499505, 127.02882598822454], [37.497625593121384, 127.02935713582038], [37.49629291770947, 127.02587362608637], [37.49754540521486, 127.02546694890695], [37.49646391248451, 127.02675574250912]],\n      markers: [],\n      infowindow: null\n    };\n  },\n\n  mounted() {\n    if (window.kakao && window.kakao.maps) {\n      this.initMap();\n    } else {\n      const script = document.createElement(\"script\");\n      /* global kakao */\n\n      script.onload = () => kakao.maps.load(this.initMap);\n\n      script.src = \"//dapi.kakao.com/v2/maps/sdk.js?autoload=false&appkey=915cffed372954b7b44804ed422b9cf0\";\n      document.head.appendChild(script);\n    }\n  },\n\n  methods: {\n    initMap() {\n      const container = document.getElementById(\"map\");\n      const options = {\n        center: new kakao.maps.LatLng(33.450701, 126.570667),\n        level: 5\n      }; //지도 객체를 등록합니다.\n      //지도 객체는 반응형 관리 대상이 아니므로 initMap에서 선언합니다.\n\n      this.map = new kakao.maps.Map(container, options);\n    },\n\n    changeSize(size) {\n      const container = document.getElementById(\"map\");\n      container.style.width = `${size}px`;\n      container.style.height = `${size}px`;\n      this.map.relayout();\n    },\n\n    displayMarker(markerPositions) {\n      if (this.markers.length > 0) {\n        this.markers.forEach(marker => marker.setMap(null));\n      }\n\n      const positions = markerPositions.map(position => new kakao.maps.LatLng(...position));\n\n      if (positions.length > 0) {\n        this.markers = positions.map(position => new kakao.maps.Marker({\n          map: this.map,\n          position\n        }));\n        const bounds = positions.reduce((bounds, latlng) => bounds.extend(latlng), new kakao.maps.LatLngBounds());\n        this.map.setBounds(bounds);\n      }\n    },\n\n    displayInfoWindow() {\n      if (this.infowindow && this.infowindow.getMap()) {\n        //이미 생성한 인포윈도우가 있기 때문에 지도 중심좌표를 인포윈도우 좌표로 이동시킨다.\n        this.map.setCenter(this.infowindow.getPosition());\n        return;\n      }\n\n      var iwContent = '<div style=\"padding:5px;\">Hello World!</div>',\n          // 인포윈도우에 표출될 내용으로 HTML 문자열이나 document element가 가능합니다\n      iwPosition = new kakao.maps.LatLng(33.450701, 126.570667),\n          //인포윈도우 표시 위치입니다\n      iwRemoveable = true; // removeable 속성을 ture 로 설정하면 인포윈도우를 닫을 수 있는 x버튼이 표시됩니다\n\n      this.infowindow = new kakao.maps.InfoWindow({\n        map: this.map,\n        // 인포윈도우가 표시될 지도\n        position: iwPosition,\n        content: iwContent,\n        removable: iwRemoveable\n      });\n      this.map.setCenter(iwPosition);\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAeA;EACAA;IACA;MACAC,mBACA,uBADA,EAEA,uBAFA,EAGA,uBAHA,CADA;MAMAC,mBACA,uCADA,EAEA,wCAFA,EAGA,wCAHA,EAIA,wCAJA,EAKA,uCALA,EAMA,uCANA,EAOA,uCAPA,CANA;MAeAC,WAfA;MAgBAC;IAhBA;EAkBA,CApBA;;EAqBAC;IACA;MACA;IACA,CAFA,MAEA;MACA;MACA;;MACAC;;MACAA,aACA,wFADA;MAEAC;IACA;EACA,CAhCA;;EAiCAC;IACAC;MACA;MACA;QACAC,oDADA;QAEAC;MAFA,EAFA,CAOA;MACA;;MACA;IACA,CAXA;;IAYAC;MACA;MACAC;MACAA;MACA;IACA,CAjBA;;IAkBAC;MACA;QACA;MACA;;MAEA,sCACAC,8CADA;;MAIA;QACA,6BACAA,YACA;UACAC,aADA;UAEAD;QAFA,EAFA;QAQA,gCACA,yCADA,EAEA,6BAFA;QAKA;MACA;IACA,CA3CA;;IA4CAE;MACA;QACA;QACA;QACA;MACA;;MAEA;MAAA;MACAC,yDADA;MAAA,IACA;MACAC,mBAFA,CAPA,CASA;;MAEA;QACAH,aADA;QACA;QACAD,oBAFA;QAGAK,kBAHA;QAIAC;MAJA;MAOA;IACA;;EA/DA;AAjCA","names":["data","markerPositions1","markerPositions2","markers","infowindow","mounted","script","document","methods","initMap","center","level","changeSize","container","displayMarker","position","map","displayInfoWindow","iwPosition","iwRemoveable","content","removable"],"sourceRoot":"src/components/company/detail/intro","sources":["KaKaoMap.vue"],"sourcesContent":["<template>\n  <div>\n    <div id=\"map\"></div>\n    <div class=\"button-group\">\n      <button @click=\"changeSize(0)\">Hide</button>\n      <button @click=\"changeSize(400)\">show</button>\n      <button @click=\"displayMarker(markerPositions1)\">marker set 1</button>\n      <button @click=\"displayMarker(markerPositions2)\">marker set 2</button>\n      <button @click=\"displayMarker([])\">marker set 3 (empty)</button>\n      <button @click=\"displayInfoWindow\">infowindow</button>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      markerPositions1: [\n        [33.452278, 126.567803],\n        [33.452671, 126.574792],\n        [33.451744, 126.572441],\n      ],\n      markerPositions2: [\n        [37.499590490909185, 127.0263723554437],\n        [37.499427948430814, 127.02794423197847],\n        [37.498553760499505, 127.02882598822454],\n        [37.497625593121384, 127.02935713582038],\n        [37.49629291770947, 127.02587362608637],\n        [37.49754540521486, 127.02546694890695],\n        [37.49646391248451, 127.02675574250912],\n      ],\n      markers: [],\n      infowindow: null,\n    };\n  },\n  mounted() {\n    if (window.kakao && window.kakao.maps) {\n      this.initMap();\n    } else {\n      const script = document.createElement(\"script\");\n      /* global kakao */\n      script.onload = () => kakao.maps.load(this.initMap);\n      script.src =\n        \"//dapi.kakao.com/v2/maps/sdk.js?autoload=false&appkey=915cffed372954b7b44804ed422b9cf0\";\n      document.head.appendChild(script);\n    }\n  },\n  methods: {\n    initMap() {\n      const container = document.getElementById(\"map\");\n      const options = {\n        center: new kakao.maps.LatLng(33.450701, 126.570667),\n        level: 5,\n      };\n\n      //지도 객체를 등록합니다.\n      //지도 객체는 반응형 관리 대상이 아니므로 initMap에서 선언합니다.\n      this.map = new kakao.maps.Map(container, options);\n    },\n    changeSize(size) {\n      const container = document.getElementById(\"map\");\n      container.style.width = `${size}px`;\n      container.style.height = `${size}px`;\n      this.map.relayout();\n    },\n    displayMarker(markerPositions) {\n      if (this.markers.length > 0) {\n        this.markers.forEach((marker) => marker.setMap(null));\n      }\n\n      const positions = markerPositions.map(\n        (position) => new kakao.maps.LatLng(...position)\n      );\n\n      if (positions.length > 0) {\n        this.markers = positions.map(\n          (position) =>\n            new kakao.maps.Marker({\n              map: this.map,\n              position,\n            })\n        );\n\n        const bounds = positions.reduce(\n          (bounds, latlng) => bounds.extend(latlng),\n          new kakao.maps.LatLngBounds()\n        );\n\n        this.map.setBounds(bounds);\n      }\n    },\n    displayInfoWindow() {\n      if (this.infowindow && this.infowindow.getMap()) {\n        //이미 생성한 인포윈도우가 있기 때문에 지도 중심좌표를 인포윈도우 좌표로 이동시킨다.\n        this.map.setCenter(this.infowindow.getPosition());\n        return;\n      }\n\n      var iwContent = '<div style=\"padding:5px;\">Hello World!</div>', // 인포윈도우에 표출될 내용으로 HTML 문자열이나 document element가 가능합니다\n        iwPosition = new kakao.maps.LatLng(33.450701, 126.570667), //인포윈도우 표시 위치입니다\n        iwRemoveable = true; // removeable 속성을 ture 로 설정하면 인포윈도우를 닫을 수 있는 x버튼이 표시됩니다\n\n      this.infowindow = new kakao.maps.InfoWindow({\n        map: this.map, // 인포윈도우가 표시될 지도\n        position: iwPosition,\n        content: iwContent,\n        removable: iwRemoveable,\n      });\n\n      this.map.setCenter(iwPosition);\n    },\n  },\n};\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n#map {\n  width: 779px;\n  height: 380px;\n  border-radius: 10px;\n  margin-top: 20px;\n}\n\n.button-group {\n  margin: 10px 0px;\n}\n\nbutton {\n  margin: 0 3px;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}