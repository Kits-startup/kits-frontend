{"ast":null,"code":"export default {\n  components: {},\n  props: {\n    emailFrom: {\n      type: String,\n      default: \"\"\n    }\n  },\n\n  data() {\n    return {\n      adress: {\n        inputDisable: false,\n        postcode: \"\",\n        address: \"\",\n        extraAddress: \"\"\n      },\n      entpIntro: \"\",\n      showServiceModal: false,\n      showPersonalModal: false,\n      showThirdPartyModal: false,\n      inputEmail: this.emailFrom,\n      selectList: [],\n      checkList: [\"age\", \"service\", \"private\", \"offer\", \"agree\"]\n    };\n  },\n\n  methods: {\n    checkArr: function () {\n      console.log(this.selectList);\n    },\n\n    execDaumPostcode() {\n      new window.daum.Postcode({\n        oncomplete: data => {\n          if (this.adress.extraAddress !== \"\") {\n            this.adress.extraAddress = \"\";\n          }\n\n          if (data.userSelectedType === \"R\") {\n            // 사용자가 도로명 주소를 선택했을 경우\n            this.adress.address = data.roadAddress;\n          } else {\n            // 사용자가 지번 주소를 선택했을 경우(J)\n            this.adress.address = data.jibunAddress;\n          } // 사용자가 선택한 주소가 도로명 타입일때 참고항목을 조합한다.\n\n\n          if (data.userSelectedType === \"R\") {\n            // 법정동명이 있을 경우 추가한다. (법정리는 제외)\n            // 법정동의 경우 마지막 문자가 \"동/로/가\"로 끝난다.\n            if (data.bname !== \"\" && /[동|로|가]$/g.test(data.bname)) {\n              this.adress.extraAddress += data.bname;\n            } // 건물명이 있고, 공동주택일 경우 추가한다.\n\n\n            if (data.buildingName !== \"\" && data.apartment === \"Y\") {\n              this.adress.extraAddress += this.adress.extraAddress !== \"\" ? `, ${data.buildingName}` : data.buildingName;\n            } // 표시할 참고항목이 있을 경우, 괄호까지 추가한 최종 문자열을 만든다.\n\n\n            if (this.adress.extraAddress !== \"\") {\n              this.adress.extraAddress = `(${this.adress.extraAddress})`;\n            }\n          } else {\n            this.adress.extraAddress = \"\";\n          } // 우편번호를 입력한다.\n\n\n          this.adress.postcode = data.zonecode;\n        }\n      }).open();\n    }\n\n  },\n  computed: {\n    allSelected: {\n      get: function () {\n        return this.checkList.length === this.selectList.length;\n      },\n      //setter\n      set: function (e) {\n        this.selectList = e ? this.checkList : [];\n      }\n    }\n  }\n};","map":{"version":3,"mappings":"AAuKA;EACAA,cADA;EAEAC;IACAC;MACAC,YADA;MAEAC;IAFA;EADA,CAFA;;EAQAC;IACA;MACAC;QACAC,mBADA;QAEAC,YAFA;QAGAC,WAHA;QAIAC;MAJA,CADA;MAOAC,aAPA;MAQAC,uBARA;MASAC,wBATA;MAUAC,0BAVA;MAWAC,0BAXA;MAYAC,cAZA;MAaAC;IAbA;EAeA,CAxBA;;EAyBAC;IACAC;MACAC;IACA,CAHA;;IAIAC;MACA;QACAC;UACA;YACA;UACA;;UACA;YACA;YACA;UACA,CAHA,MAGA;YACA;YACA;UACA,CAVA,CAYA;;;UACA;YACA;YACA;YACA;cACA;YACA,CALA,CAMA;;;YACA;cACA,4BACA,kCACA,wBADA,GAEAjB,iBAHA;YAIA,CAZA,CAaA;;;YACA;cACA;YACA;UACA,CAjBA,MAiBA;YACA;UACA,CAhCA,CAiCA;;;UACA;QACA;MApCA,GAqCAkB,IArCA;IAsCA;;EA3CA,CAzBA;EAsEAC;IACAC;MACAC;QACA;MACA,CAHA;MAIA;MACAC;QACA;MACA;IAPA;EADA;AAtEA","names":["components","props","emailFrom","type","default","data","adress","inputDisable","postcode","address","extraAddress","entpIntro","showServiceModal","showPersonalModal","showThirdPartyModal","inputEmail","selectList","checkList","methods","checkArr","console","execDaumPostcode","oncomplete","open","computed","allSelected","get","set"],"sourceRoot":"src/components/Login/ResisterEnterprise","sources":["ResisterBodyEnterpriseInfo.vue"],"sourcesContent":["<template>\n  <div class=\"body\">\n    <div class=\"wideBody\">\n      <div class=\"title\">기업정보 등록</div>\n      <div class=\"flex-row marginB27\">\n        <div class=\"oneInputSet w-437px\">\n          <div class=\"inputTitle\">기업명</div>\n          <input\n            type=\"text\"\n            class=\"inputBox\"\n            placeholder=\"기업명을 입력해 주세요.\"\n          />\n        </div>\n        <div class=\"oneInputSet w-171px\">\n          <div class=\"inputTitle\">설립년도</div>\n          <input type=\"text\" class=\"inputBox\" placeholder=\"예) 2020\" />\n        </div>\n      </div>\n      <div class=\"oneInputSet marginB18\">\n        <div class=\"inputTitle\">주소</div>\n        <div class=\"flex-row marginB10\">\n          <input\n            type=\"text\"\n            class=\"inputBox w-437px\"\n            placeholder=\"주소를 검색해주세요\"\n            v-model=\"adress.adress\"\n            :readonly=\"true\"\n          />\n\n          <input\n            class=\"submit\"\n            @click=\"execDaumPostcode()\"\n            type=\"submit\"\n            value=\"검색\"\n          />\n        </div>\n        <input\n          type=\"text\"\n          class=\"inputBox\"\n          placeholder=\"상세주소를 입력해주세요\"\n        />\n      </div>\n      <div class=\"oneInputSet marginB27\">\n        <div class=\"inputTitle\">사업자등록번호</div>\n        <input\n          type=\"text\"\n          class=\"inputBox\"\n          placeholder=\"예)123456789 띄어쓰기없이 번호만 입력\"\n        />\n      </div>\n\n      <div class=\"oneInputSet marginB27\">\n        <div class=\"inputTitle\">매출액 또는 투자금(단위 만원)</div>\n        <input type=\"text\" class=\"inputBox\" placeholder=\"예) 200000000\" />\n      </div>\n\n      <div class=\"oneInputSet marginB27\">\n        <div class=\"inputTitle\">직원수</div>\n        <input\n          type=\"text\"\n          class=\"inputBox\"\n          placeholder=\"예) 5,10,15 숫자만입력\"\n        />\n      </div>\n\n      <div class=\"oneInputSet marginB27\">\n        <div style=\"display: flex; flex-direction: row\">\n          <div class=\"oneInputSet\" style=\"width: 50%; margin-right: 8px\">\n            <div class=\"inputTitle\">담장자 이름</div>\n            <input\n              type=\"text\"\n              class=\"inputBox\"\n              placeholder=\"담당자 이름을 입력해주세요.\"\n            />\n          </div>\n          <div class=\"oneInputSet\" style=\"width: 50%\">\n            <div class=\"inputTitle\">담당자 연락처</div>\n\n            <input\n              type=\"text\"\n              class=\"inputBox\"\n              placeholder=\"예) 01012345678 숫자만입력\"\n            />\n          </div>\n        </div>\n      </div>\n\n      <div class=\"oneInputSet\" style=\"margin-bottom: 43px\">\n        <div class=\"inputTitle\">기업/서비스 소개</div>\n        <textarea\n          type=\"text\"\n          class=\"inputBox\"\n          style=\"height: 276px; padding-top: 17px\"\n          placeholder=\"내용을 상세히 작성해주세요.\"\n          v-model=\"entpIntro\"\n        ></textarea>\n        <div\n          class=\"introLimit\"\n          v-bind:class=\"entpIntro.length <= 4000 ? '' : 'tooLong'\"\n        >\n          {{ entpIntro.length }}/4000\n        </div>\n      </div>\n\n      <div class=\"oneInputSet\">\n        <div class=\"inputTitle\">홈페이지 URL</div>\n        <input\n          type=\"text\"\n          class=\"inputBox\"\n          placeholder=\"홈페이지 URL 을 입력해주세요.\"\n        />\n      </div>\n    </div>\n\n    <div class=\"agree\">\n      <div class=\"title\">이용약관 내용동의</div>\n      <div class=\"checkBoxText agreeALlcss\">\n        <input type=\"checkbox\" v-model=\"allSelected\" value=\"agreeAll\" />전체동의\n      </div>\n      <div class=\"checkBoxText\">\n        <input type=\"checkbox\" v-model=\"selectList\" value=\"age\" />만 14세 이상\n        입니다\n      </div>\n      <div class=\"checkBoxText\">\n        <input type=\"checkbox\" v-model=\"selectList\" value=\"service\" />\n        <div class=\"flexForDetail\">\n          서비스 이용 약관 동의 (필수)\n          <div class=\"detail pointer\" @click=\"showServiceModal = true\">\n            상세보기\n          </div>\n        </div>\n      </div>\n      <div class=\"checkBoxText\">\n        <input type=\"checkbox\" v-model=\"selectList\" value=\"private\" />\n        <div class=\"flexForDetail\">\n          개인 정보 수집. 이용에 대한 동의 (필수)\n          <div class=\"detail pointer\" @click=\"showPersonalModal = true\">\n            상세보기\n          </div>\n        </div>\n      </div>\n      <div class=\"checkBoxText\">\n        <input type=\"checkbox\" v-model=\"selectList\" value=\"offer\" />\n        <div class=\"flexForDetail\">\n          개인정보 제 3자 제공및 위탁사항 (선택)\n          <div class=\"detail pointer\" @click=\"showThirdPartyModal = true\">\n            상세보기\n          </div>\n        </div>\n      </div>\n      <div class=\"checkBoxText\">\n        <input type=\"checkbox\" v-model=\"selectList\" value=\"agree\" />\n        <div class=\"textAlign\">위내용을 확인하였으며 동의 합니다.</div>\n      </div>\n\n      <button class=\"submit\" id=\"finalSubmit\" @click=\"checkArr()\">\n        화원가입하기\n      </button>\n      <input type=\"text\" v-model=\"adress.postcode\" placeholder=\"우편번호\" />\n      <input type=\"text\" id=\"address\" placeholder=\"주소\" /><br />\n      <input type=\"text\" id=\"detailAddress\" placeholder=\"상세주소\" />\n      <input type=\"text\" id=\"extraAddress\" placeholder=\"참고항목\" />\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  components: {},\n  props: {\n    emailFrom: {\n      type: String,\n      default: \"\",\n    },\n  },\n  data() {\n    return {\n      adress: {\n        inputDisable:false,\n        postcode: \"\",\n        address: \"\",\n        extraAddress: \"\",\n      },\n      entpIntro: \"\",\n      showServiceModal: false,\n      showPersonalModal: false,\n      showThirdPartyModal: false,\n      inputEmail: this.emailFrom,\n      selectList: [],\n      checkList: [\"age\", \"service\", \"private\", \"offer\", \"agree\"],\n    };\n  },\n  methods: {\n    checkArr: function () {\n      console.log(this.selectList);\n    },\n    execDaumPostcode() {\n      new window.daum.Postcode({\n        oncomplete: (data) => {\n          if (this.adress.extraAddress !== \"\") {\n            this.adress.extraAddress = \"\";\n          }\n          if (data.userSelectedType === \"R\") {\n            // 사용자가 도로명 주소를 선택했을 경우\n            this.adress.address = data.roadAddress;\n          } else {\n            // 사용자가 지번 주소를 선택했을 경우(J)\n            this.adress.address = data.jibunAddress;\n          }\n\n          // 사용자가 선택한 주소가 도로명 타입일때 참고항목을 조합한다.\n          if (data.userSelectedType === \"R\") {\n            // 법정동명이 있을 경우 추가한다. (법정리는 제외)\n            // 법정동의 경우 마지막 문자가 \"동/로/가\"로 끝난다.\n            if (data.bname !== \"\" && /[동|로|가]$/g.test(data.bname)) {\n              this.adress.extraAddress += data.bname;\n            }\n            // 건물명이 있고, 공동주택일 경우 추가한다.\n            if (data.buildingName !== \"\" && data.apartment === \"Y\") {\n              this.adress.extraAddress +=\n                this.adress.extraAddress !== \"\"\n                  ? `, ${data.buildingName}`\n                  : data.buildingName;\n            }\n            // 표시할 참고항목이 있을 경우, 괄호까지 추가한 최종 문자열을 만든다.\n            if (this.adress.extraAddress !== \"\") {\n              this.adress.extraAddress = `(${this.adress.extraAddress})`;\n            }\n          } else {\n            this.adress.extraAddress = \"\";\n          }\n          // 우편번호를 입력한다.\n          this.adress.postcode = data.zonecode;\n        },\n      }).open();\n    },\n  },\n  computed: {\n    allSelected: {\n      get: function () {\n        return this.checkList.length === this.selectList.length;\n      },\n      //setter\n      set: function (e) {\n        this.selectList = e ? this.checkList : [];\n      },\n    },\n  },\n};\n</script>\n\n<style scoped>\n* {\n  font-family: \"Noto Sans KR\";\n}\n\n.body {\n  display: flex;\n  margin: auto;\n  margin-top: 76px;\n  flex-direction: column;\n  align-items: stretch;\n}\n\n.wideBody {\n  display: flex;\n  margin: auto;\n  width: 620px;\n  flex-direction: column;\n  align-items: stretch;\n}\n\n.title {\n  font-family: \"Noto Sans KR\";\n  font-style: normal;\n  font-weight: 500;\n  font-size: 26px;\n\n  line-height: 38px;\n  color: #000000;\n  margin-bottom: 28px;\n}\n\n.inputTitle {\n  font-family: \"Noto Sans KR\";\n  font-style: normal;\n  font-weight: 500;\n  font-size: 20px;\n  line-height: 30px;\n  margin-bottom: 10px;\n\n  color: #000000;\n}\n\n.inputBox {\n  height: 55px;\n  border: 1px solid #0376db;\n  border-radius: 3px;\n  font-style: normal;\n  font-weight: 400;\n  font-size: 16px;\n  line-height: 24px;\n  color: #515151;\n  padding: 0;\n  padding-left: 19px;\n\n  text-align: left;\n}\n\n.oneInputSet {\n  display: flex;\n  flex-direction: column;\n  align-items: stretch;\n}\n\n.passwordBox {\n  margin-bottom: 4px;\n}\n.passwordCaution {\n  font-family: \"Noto Sans KR\";\n  font-style: normal;\n  font-weight: 400;\n  font-size: 12px;\n  line-height: 18px;\n  margin-top: 4px;\n  color: #515151;\n  margin-bottom: 5px;\n}\n\n.phoneCertification {\n  margin-top: 41px;\n  display: flex;\n  flex-direction: column;\n  align-items: stretch;\n}\n\n.getCertificationBox {\n  display: flex;\n  margin-bottom: 10px;\n}\n.certificationInput {\n  width: 273px;\n  height: 55px;\n  margin: 0;\n}\n\n.submit {\n  background: #0376db;\n  outline: 0;\n  border: 0;\n  border-radius: 3px;\n  font-style: normal;\n  font-weight: 500;\n  font-size: 18px;\n  line-height: 27px;\n  color: #ffffff;\n\n  width: 139px;\n  height: 55px;\n}\n\n.agree {\n  display: flex;\n  flex-direction: column;\n  align-items: stretch;\n  margin-top: 85px;\n}\n.checkBoxText {\n  display: flex;\n  margin-bottom: 10px;\n  font-family: \"Noto Sans KR\";\n  font-style: normal;\n  font-weight: 400;\n  font-size: 18px;\n  line-height: 27px;\n  color: #000000;\n}\n\n.checkBoxText input {\n  margin-right: 8px;\n}\n\n.agreeALlcss {\n  font-weight: 500;\n  color: #0376db;\n}\n\n.flexForDetail {\n  display: flex;\n  justify-content: space-between;\n  width: 100%;\n}\n\n.detail {\n  margin-right: 39px;\n  font-weight: 500;\n  font-size: 18px;\n  line-height: 27px;\n  text-decoration-line: underline;\n  color: #0376db;\n}\n\n#finalSubmit {\n  width: 100%;\n  border-radius: 28.5px;\n  margin-top: 41px;\n}\n\n.wrongFormWarn {\n  font-family: \"Noto Sans KR\";\n  font-style: normal;\n  font-weight: 400;\n  font-size: 12px;\n  line-height: 18px;\n  height: 18px;\n  margin-top: 4px;\n  margin-bottom: 5px;\n  color: #e60505;\n}\n\n.w-437px {\n  width: 437px;\n  margin-right: 12px;\n}\n\n.w-171px {\n  width: 171px;\n}\n\n.flex-row {\n  display: flex;\n  flex-direction: row;\n}\n\n.marginB10 {\n  margin-bottom: 10px;\n}\n.marginB18 {\n  margin-bottom: 18px;\n}\n.marginB27 {\n  margin-bottom: 27px;\n}\n\n.introLimit {\n  text-align: right;\n  font-style: normal;\n  font-weight: 400;\n  font-size: 14px;\n  line-height: 21px;\n  color: #515151;\n}\n.tooLong,\n.tooLong:focus {\n  color: #e60505;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}